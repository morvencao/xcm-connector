/*
Cluster Self-Managed Service API

Cluster Self-Managed Service API

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ClusterPatchRequest struct for ClusterPatchRequest
type ClusterPatchRequest struct {
	ControlplaneId    *string    `json:"controlplane_id,omitempty"`
	ClusterId         *string    `json:"cluster_id,omitempty"`
	SubscriptionId    *string    `json:"subscription_id,omitempty"`
	State             *string    `json:"state,omitempty"`
	CreationTimestamp *time.Time `json:"creation_timestamp,omitempty"`
	ActivityTimestamp *time.Time `json:"activity_timestamp,omitempty"`
}

// NewClusterPatchRequest instantiates a new ClusterPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterPatchRequest() *ClusterPatchRequest {
	this := ClusterPatchRequest{}
	return &this
}

// NewClusterPatchRequestWithDefaults instantiates a new ClusterPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterPatchRequestWithDefaults() *ClusterPatchRequest {
	this := ClusterPatchRequest{}
	return &this
}

// GetControlplaneId returns the ControlplaneId field value if set, zero value otherwise.
func (o *ClusterPatchRequest) GetControlplaneId() string {
	if o == nil || o.ControlplaneId == nil {
		var ret string
		return ret
	}
	return *o.ControlplaneId
}

// GetControlplaneIdOk returns a tuple with the ControlplaneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPatchRequest) GetControlplaneIdOk() (*string, bool) {
	if o == nil || o.ControlplaneId == nil {
		return nil, false
	}
	return o.ControlplaneId, true
}

// HasControlplaneId returns a boolean if a field has been set.
func (o *ClusterPatchRequest) HasControlplaneId() bool {
	if o != nil && o.ControlplaneId != nil {
		return true
	}

	return false
}

// SetControlplaneId gets a reference to the given string and assigns it to the ControlplaneId field.
func (o *ClusterPatchRequest) SetControlplaneId(v string) {
	o.ControlplaneId = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *ClusterPatchRequest) GetClusterId() string {
	if o == nil || o.ClusterId == nil {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPatchRequest) GetClusterIdOk() (*string, bool) {
	if o == nil || o.ClusterId == nil {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *ClusterPatchRequest) HasClusterId() bool {
	if o != nil && o.ClusterId != nil {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *ClusterPatchRequest) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *ClusterPatchRequest) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPatchRequest) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *ClusterPatchRequest) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *ClusterPatchRequest) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ClusterPatchRequest) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPatchRequest) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ClusterPatchRequest) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ClusterPatchRequest) SetState(v string) {
	o.State = &v
}

// GetCreationTimestamp returns the CreationTimestamp field value if set, zero value otherwise.
func (o *ClusterPatchRequest) GetCreationTimestamp() time.Time {
	if o == nil || o.CreationTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationTimestamp
}

// GetCreationTimestampOk returns a tuple with the CreationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPatchRequest) GetCreationTimestampOk() (*time.Time, bool) {
	if o == nil || o.CreationTimestamp == nil {
		return nil, false
	}
	return o.CreationTimestamp, true
}

// HasCreationTimestamp returns a boolean if a field has been set.
func (o *ClusterPatchRequest) HasCreationTimestamp() bool {
	if o != nil && o.CreationTimestamp != nil {
		return true
	}

	return false
}

// SetCreationTimestamp gets a reference to the given time.Time and assigns it to the CreationTimestamp field.
func (o *ClusterPatchRequest) SetCreationTimestamp(v time.Time) {
	o.CreationTimestamp = &v
}

// GetActivityTimestamp returns the ActivityTimestamp field value if set, zero value otherwise.
func (o *ClusterPatchRequest) GetActivityTimestamp() time.Time {
	if o == nil || o.ActivityTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.ActivityTimestamp
}

// GetActivityTimestampOk returns a tuple with the ActivityTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPatchRequest) GetActivityTimestampOk() (*time.Time, bool) {
	if o == nil || o.ActivityTimestamp == nil {
		return nil, false
	}
	return o.ActivityTimestamp, true
}

// HasActivityTimestamp returns a boolean if a field has been set.
func (o *ClusterPatchRequest) HasActivityTimestamp() bool {
	if o != nil && o.ActivityTimestamp != nil {
		return true
	}

	return false
}

// SetActivityTimestamp gets a reference to the given time.Time and assigns it to the ActivityTimestamp field.
func (o *ClusterPatchRequest) SetActivityTimestamp(v time.Time) {
	o.ActivityTimestamp = &v
}

func (o ClusterPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ControlplaneId != nil {
		toSerialize["controlplane_id"] = o.ControlplaneId
	}
	if o.ClusterId != nil {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if o.SubscriptionId != nil {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.CreationTimestamp != nil {
		toSerialize["creation_timestamp"] = o.CreationTimestamp
	}
	if o.ActivityTimestamp != nil {
		toSerialize["activity_timestamp"] = o.ActivityTimestamp
	}
	return json.Marshal(toSerialize)
}

type NullableClusterPatchRequest struct {
	value *ClusterPatchRequest
	isSet bool
}

func (v NullableClusterPatchRequest) Get() *ClusterPatchRequest {
	return v.value
}

func (v *NullableClusterPatchRequest) Set(val *ClusterPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterPatchRequest(val *ClusterPatchRequest) *NullableClusterPatchRequest {
	return &NullableClusterPatchRequest{value: val, isSet: true}
}

func (v NullableClusterPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
