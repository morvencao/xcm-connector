/*
Cluster Self-Managed Service API

Cluster Self-Managed Service API

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterStatusList struct for ClusterStatusList
type ClusterStatusList struct {
	Kind  string          `json:"kind"`
	Href  *string         `json:"href,omitempty"`
	Page  *int32          `json:"page,omitempty"`
	Size  *int32          `json:"size,omitempty"`
	Total *int32          `json:"total,omitempty"`
	Items []ClusterStatus `json:"items"`
}

// NewClusterStatusList instantiates a new ClusterStatusList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterStatusList(kind string, items []ClusterStatus) *ClusterStatusList {
	this := ClusterStatusList{}
	this.Kind = kind
	this.Items = items
	return &this
}

// NewClusterStatusListWithDefaults instantiates a new ClusterStatusList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterStatusListWithDefaults() *ClusterStatusList {
	this := ClusterStatusList{}
	return &this
}

// GetKind returns the Kind field value
func (o *ClusterStatusList) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *ClusterStatusList) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *ClusterStatusList) SetKind(v string) {
	o.Kind = v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ClusterStatusList) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusList) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ClusterStatusList) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ClusterStatusList) SetHref(v string) {
	o.Href = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *ClusterStatusList) GetPage() int32 {
	if o == nil || o.Page == nil {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusList) GetPageOk() (*int32, bool) {
	if o == nil || o.Page == nil {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *ClusterStatusList) HasPage() bool {
	if o != nil && o.Page != nil {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *ClusterStatusList) SetPage(v int32) {
	o.Page = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ClusterStatusList) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusList) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ClusterStatusList) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *ClusterStatusList) SetSize(v int32) {
	o.Size = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ClusterStatusList) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusList) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ClusterStatusList) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *ClusterStatusList) SetTotal(v int32) {
	o.Total = &v
}

// GetItems returns the Items field value
func (o *ClusterStatusList) GetItems() []ClusterStatus {
	if o == nil {
		var ret []ClusterStatus
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *ClusterStatusList) GetItemsOk() ([]ClusterStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *ClusterStatusList) SetItems(v []ClusterStatus) {
	o.Items = v
}

func (o ClusterStatusList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Page != nil {
		toSerialize["page"] = o.Page
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableClusterStatusList struct {
	value *ClusterStatusList
	isSet bool
}

func (v NullableClusterStatusList) Get() *ClusterStatusList {
	return v.value
}

func (v *NullableClusterStatusList) Set(val *ClusterStatusList) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterStatusList) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterStatusList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterStatusList(val *ClusterStatusList) *NullableClusterStatusList {
	return &NullableClusterStatusList{value: val, isSet: true}
}

func (v NullableClusterStatusList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterStatusList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
