/*
Cluster Self-Managed Service API

Cluster Self-Managed Service API

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterAddonAllOf struct for ClusterAddonAllOf
type ClusterAddonAllOf struct {
	State  *string              `json:"state,omitempty"`
	Status []ClusterAddonStatus `json:"status,omitempty"`
}

// NewClusterAddonAllOf instantiates a new ClusterAddonAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterAddonAllOf() *ClusterAddonAllOf {
	this := ClusterAddonAllOf{}
	return &this
}

// NewClusterAddonAllOfWithDefaults instantiates a new ClusterAddonAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterAddonAllOfWithDefaults() *ClusterAddonAllOf {
	this := ClusterAddonAllOf{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ClusterAddonAllOf) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAddonAllOf) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ClusterAddonAllOf) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ClusterAddonAllOf) SetState(v string) {
	o.State = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClusterAddonAllOf) GetStatus() []ClusterAddonStatus {
	if o == nil || o.Status == nil {
		var ret []ClusterAddonStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAddonAllOf) GetStatusOk() ([]ClusterAddonStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ClusterAddonAllOf) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given []ClusterAddonStatus and assigns it to the Status field.
func (o *ClusterAddonAllOf) SetStatus(v []ClusterAddonStatus) {
	o.Status = v
}

func (o ClusterAddonAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableClusterAddonAllOf struct {
	value *ClusterAddonAllOf
	isSet bool
}

func (v NullableClusterAddonAllOf) Get() *ClusterAddonAllOf {
	return v.value
}

func (v *NullableClusterAddonAllOf) Set(val *ClusterAddonAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterAddonAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterAddonAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterAddonAllOf(val *ClusterAddonAllOf) *NullableClusterAddonAllOf {
	return &NullableClusterAddonAllOf{value: val, isSet: true}
}

func (v NullableClusterAddonAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterAddonAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
