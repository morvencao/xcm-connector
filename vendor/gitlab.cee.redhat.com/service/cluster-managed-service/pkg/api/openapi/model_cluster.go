/*
Cluster Self-Managed Service API

Cluster Self-Managed Service API

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Cluster struct for Cluster
type Cluster struct {
	Id                *string                `json:"id,omitempty"`
	Kind              *string                `json:"kind,omitempty"`
	Href              *string                `json:"href,omitempty"`
	ControlplaneId    *string                `json:"controlplane_id,omitempty"`
	ClusterId         *string                `json:"cluster_id,omitempty"`
	Cluster           *ClusterReference      `json:"cluster,omitempty"`
	Subscription      *SubscriptionReference `json:"subscription,omitempty"`
	SubscriptionId    *string                `json:"subscription_id,omitempty"`
	State             *string                `json:"state,omitempty"`
	CreationTimestamp *time.Time             `json:"creation_timestamp,omitempty"`
	ActivityTimestamp *time.Time             `json:"activity_timestamp,omitempty"`
	Labels            *ObjectReference       `json:"labels,omitempty"`
	Addons            *ObjectReference       `json:"addons,omitempty"`
	Status            *ObjectReference       `json:"status,omitempty"`
}

// NewCluster instantiates a new Cluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCluster() *Cluster {
	this := Cluster{}
	return &this
}

// NewClusterWithDefaults instantiates a new Cluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterWithDefaults() *Cluster {
	this := Cluster{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Cluster) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Cluster) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Cluster) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *Cluster) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *Cluster) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *Cluster) SetKind(v string) {
	o.Kind = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *Cluster) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *Cluster) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *Cluster) SetHref(v string) {
	o.Href = &v
}

// GetControlplaneId returns the ControlplaneId field value if set, zero value otherwise.
func (o *Cluster) GetControlplaneId() string {
	if o == nil || o.ControlplaneId == nil {
		var ret string
		return ret
	}
	return *o.ControlplaneId
}

// GetControlplaneIdOk returns a tuple with the ControlplaneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetControlplaneIdOk() (*string, bool) {
	if o == nil || o.ControlplaneId == nil {
		return nil, false
	}
	return o.ControlplaneId, true
}

// HasControlplaneId returns a boolean if a field has been set.
func (o *Cluster) HasControlplaneId() bool {
	if o != nil && o.ControlplaneId != nil {
		return true
	}

	return false
}

// SetControlplaneId gets a reference to the given string and assigns it to the ControlplaneId field.
func (o *Cluster) SetControlplaneId(v string) {
	o.ControlplaneId = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *Cluster) GetClusterId() string {
	if o == nil || o.ClusterId == nil {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetClusterIdOk() (*string, bool) {
	if o == nil || o.ClusterId == nil {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *Cluster) HasClusterId() bool {
	if o != nil && o.ClusterId != nil {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *Cluster) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *Cluster) GetCluster() ClusterReference {
	if o == nil || o.Cluster == nil {
		var ret ClusterReference
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetClusterOk() (*ClusterReference, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *Cluster) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterReference and assigns it to the Cluster field.
func (o *Cluster) SetCluster(v ClusterReference) {
	o.Cluster = &v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *Cluster) GetSubscription() SubscriptionReference {
	if o == nil || o.Subscription == nil {
		var ret SubscriptionReference
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetSubscriptionOk() (*SubscriptionReference, bool) {
	if o == nil || o.Subscription == nil {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *Cluster) HasSubscription() bool {
	if o != nil && o.Subscription != nil {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given SubscriptionReference and assigns it to the Subscription field.
func (o *Cluster) SetSubscription(v SubscriptionReference) {
	o.Subscription = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *Cluster) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *Cluster) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *Cluster) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Cluster) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Cluster) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Cluster) SetState(v string) {
	o.State = &v
}

// GetCreationTimestamp returns the CreationTimestamp field value if set, zero value otherwise.
func (o *Cluster) GetCreationTimestamp() time.Time {
	if o == nil || o.CreationTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationTimestamp
}

// GetCreationTimestampOk returns a tuple with the CreationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetCreationTimestampOk() (*time.Time, bool) {
	if o == nil || o.CreationTimestamp == nil {
		return nil, false
	}
	return o.CreationTimestamp, true
}

// HasCreationTimestamp returns a boolean if a field has been set.
func (o *Cluster) HasCreationTimestamp() bool {
	if o != nil && o.CreationTimestamp != nil {
		return true
	}

	return false
}

// SetCreationTimestamp gets a reference to the given time.Time and assigns it to the CreationTimestamp field.
func (o *Cluster) SetCreationTimestamp(v time.Time) {
	o.CreationTimestamp = &v
}

// GetActivityTimestamp returns the ActivityTimestamp field value if set, zero value otherwise.
func (o *Cluster) GetActivityTimestamp() time.Time {
	if o == nil || o.ActivityTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.ActivityTimestamp
}

// GetActivityTimestampOk returns a tuple with the ActivityTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetActivityTimestampOk() (*time.Time, bool) {
	if o == nil || o.ActivityTimestamp == nil {
		return nil, false
	}
	return o.ActivityTimestamp, true
}

// HasActivityTimestamp returns a boolean if a field has been set.
func (o *Cluster) HasActivityTimestamp() bool {
	if o != nil && o.ActivityTimestamp != nil {
		return true
	}

	return false
}

// SetActivityTimestamp gets a reference to the given time.Time and assigns it to the ActivityTimestamp field.
func (o *Cluster) SetActivityTimestamp(v time.Time) {
	o.ActivityTimestamp = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *Cluster) GetLabels() ObjectReference {
	if o == nil || o.Labels == nil {
		var ret ObjectReference
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetLabelsOk() (*ObjectReference, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *Cluster) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given ObjectReference and assigns it to the Labels field.
func (o *Cluster) SetLabels(v ObjectReference) {
	o.Labels = &v
}

// GetAddons returns the Addons field value if set, zero value otherwise.
func (o *Cluster) GetAddons() ObjectReference {
	if o == nil || o.Addons == nil {
		var ret ObjectReference
		return ret
	}
	return *o.Addons
}

// GetAddonsOk returns a tuple with the Addons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetAddonsOk() (*ObjectReference, bool) {
	if o == nil || o.Addons == nil {
		return nil, false
	}
	return o.Addons, true
}

// HasAddons returns a boolean if a field has been set.
func (o *Cluster) HasAddons() bool {
	if o != nil && o.Addons != nil {
		return true
	}

	return false
}

// SetAddons gets a reference to the given ObjectReference and assigns it to the Addons field.
func (o *Cluster) SetAddons(v ObjectReference) {
	o.Addons = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Cluster) GetStatus() ObjectReference {
	if o == nil || o.Status == nil {
		var ret ObjectReference
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetStatusOk() (*ObjectReference, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Cluster) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ObjectReference and assigns it to the Status field.
func (o *Cluster) SetStatus(v ObjectReference) {
	o.Status = &v
}

func (o Cluster) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.ControlplaneId != nil {
		toSerialize["controlplane_id"] = o.ControlplaneId
	}
	if o.ClusterId != nil {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if o.Subscription != nil {
		toSerialize["subscription"] = o.Subscription
	}
	if o.SubscriptionId != nil {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.CreationTimestamp != nil {
		toSerialize["creation_timestamp"] = o.CreationTimestamp
	}
	if o.ActivityTimestamp != nil {
		toSerialize["activity_timestamp"] = o.ActivityTimestamp
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Addons != nil {
		toSerialize["addons"] = o.Addons
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableCluster struct {
	value *Cluster
	isSet bool
}

func (v NullableCluster) Get() *Cluster {
	return v.value
}

func (v *NullableCluster) Set(val *Cluster) {
	v.value = val
	v.isSet = true
}

func (v NullableCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCluster(val *Cluster) *NullableCluster {
	return &NullableCluster{value: val, isSet: true}
}

func (v NullableCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
